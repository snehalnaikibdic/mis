class ErrorCodes:

    @staticmethod
    def get_error_message(argument):
        # assert argument in ErrorCodes.CONSTANT, f"Error Code {argument} not configured."
        return ErrorCodes.CONSTANT.get(argument)[1]

    @staticmethod
    def get_error_response(error_code, additional_info=""):
        error_message = ErrorCodes.get_error_message(error_code)

        if additional_info is not None:
            # Append additional information to the error message
            error_message += f" {additional_info}"

        return {
            "code": error_code,
            "message": error_message
        }

    CONSTANT = {
        200: ('200: Success', 'Success'),
        500: ('500: Internal error occurred', 'Internal error occurred'),
        1001: ('1001: Signature validation failed', 'Signature validation failed'),
        1002: ('1002: Platform key not found', 'Platform key not found'),
        1003: ('1003: Ledger ID already exists', 'Ledger ID already exists'),
        1004: ('1004: Ledger Already funded', 'Ledger Already funded'),
        1005: ('1005: Ledger is not funded', 'Ledger is not funded'),
        1006: ('1006: Cancellation request has failed', 'Cancellation request has failed'),
        1007: ('1007: Ledger not found', 'Ledger not found'),
        1008: ('1008: Request timeout', 'Request timeout'),
        1009: ('1009: Duplicate request id', 'Duplicate request id'),
        1010: ('1010: Ledger data count mismatched', 'Ledger data count mismatched'),
        1011: ('1011: Invalid ledger data', 'Invalid ledger data'),
        1012: ('1012: Invalid ledger data', 'Invalid ledger data'),
        1013: ('1013: Ledger funded', 'Ledger funded'),
        1014: ('1014: Duplicate invoice data found', 'Duplicate invoice data found'),
        1015: ('1015: Duplicate gst number found', 'Duplicate gst number found'),
        1016: ('1016: Invoice date is in the future ', 'Invoice date is in the future'),
        1017: ('1017: Invalid gst no for sellerCode', 'invalid gst no for sellerCode'),
        1018: ('1018: Entity registration not done for seller code', 'Entity registration not done for seller code'),
        1019: ('1019: Invalid gst no for buyer code', 'Invalid gst no for buyer code'),
        1020: ('1020: Entity registration not done for buyer code', 'Entity registration not done for buyer code'),
        1021: ('1021: Buyer and seller code cannot be same for an invoice', 'Buyer and seller code cannot be same for an invoice'),
        1022: ('1022: Buyer and seller GST cannot be same for an invoice', 'Buyer and seller GST cannot be same for an invoice'),
        1023: ('1023: Registration request received.', 'Registration request received.'),
        1024: ('1024: Request id does not exists.', 'Request id does not exists.'),
        1025: ('1025: Invoice due date should be after invoice date ', 'Invoice due date should be after invoice date'),
        1026: ('1026: Ledger Already disbursed', 'Ledger Already disbursed'),
        1027: ('1027: Ledger Disbursed', 'Ledger Disbursed'),
        1028: ('1028: Finance request received.', 'Finance request received.'),
        1029: ('1029: Disbursement request received.', 'Disbursement request received.'),
        1030: ('1030: Please call Finance request first.', 'Please call Finance request first.'),
        1031: ('1031: Ledger Repayment done.', 'Ledger Repayment done.'),
        1032: ('1032: Please call Disbursement request first.', 'Please call Disbursement request first.'),
        1033: ('1033: Repayment request received.', 'Repayment request received.'),
        1034: ('1034: Validation service with entity code request received.', 'Validation service with entity code request received.'),
        1035: ('1035: Validation service without entity code request received.', 'Validation service without entity code request received.'),
        1036: ('1036: Requested amount for Invoice Z should be X because adjustment amount sent is Y', 'Requested amount for Invoice Z should be X because adjustment amount sent is Y'),
        1037: ('1037: Finance request date should be greater than invoice date', 'Finance request date should be greater than invoice date'),
        1038: ('1038: DueAmount shall be greater than Disbursed Amount', 'DueAmount shall be greater than Disbursed Amount'),
        1039: ('1039: Disburse date should be greater than invoice date', 'Disburse date should be greater than invoice date'),
        1040: ('1040: Due date should be greater than Disburse date', 'Due date should be greater than Disburse date'),
        1041: ('1041: Repayment date should be greater than invoice date', 'Repayment date should be greater than invoice date'),
        1042: ('1042: Due amount shall be greater than repayment amount', 'Due amount shall be greater than repayment amount'),
        1043: ('1043: Invoice not found', 'Invoice not found'),
        1044: ('1044: Ledger Already Repaid', 'Ledger Already Repaid'),
        1045: ('1045: Ledger is not eligible for funding', 'Ledger is not eligible for funding'),
        1046: ('1046: Ledger is funded by others', 'Ledger is funded by others'),
        1047: ('1047: Adjustment amount is greater than invoice amount', 'Adjustment amount is greater than invoice amount'),
        1048: ('1048: Seller code does not exist. Please call Enity registration API first', 'Seller code does not exist. Please call Enity registration API first'),
        1049: ('1049: Buyer code does not exist. Please call Enity registration API first', 'Buyer code does not exist. Please call Enity registration API first'),
        1050: ('1050: Ledger status check request received', 'Ledger status check request received'),
        1051: ('1051: Invoice status check with code request received', 'Invoice status check with code request received'),
        1052: ('1052: Invoice status check without code request received', 'Invoice status check without code request received'),
        1053: ('1053: Entity registration request received', 'Entity registration request received'),
        1054: ('1054: Registration request received', 'Registration request received'),
        1055: ('1055: Registration with code request received', 'Registration with code request received'),
        1056: ('1056: Registration without code request received', 'Registration without code request received'),
        1057: ('1057: Request in progress', 'Request in progress'),
        1058: ('1058: Incorrect gst or pan or duplicate gst', 'Incorrect gst or pan or duplicate gst'),
        1059: ('1059: Invalid buyer pan', 'Invalid Buyer pan'),
        1060: ('1060: Invalid seller pan', 'Invalid seller pan'),
        1061: ('1061: Invalid seller gst for given code', 'Invalid seller gst for given code'),
        1062: ('1062: Invalid buyer gst for given code', 'Invalid buyer gst for given code'),
        1063: ('1063: Invalid buyer gst number in identifier', 'Invalid gst number in identifier'),
        1064: ('1064: Invalid buyer pan number', 'Invalid buyer pan number'),
        1065: ('1065: Invalid seller gst number in identifier', 'Invalid seller gst number in identifier'),
        1066: ('1066: Invalid seller pan number', 'Invalid seller pan number'),
        1067: ('1067: Seller gst can not be blank', 'Seller gst can not be blank'),
        1068: ('1068: Buyer gst can not be blank', 'Buyer gst can not be blank'),
        1069: ('1069: Ledger is Partial Funded', 'Ledger is Partial Funded'),
        1070: ('1070: Duplicate correlation id', 'Duplicate correlation id,'),
        1071: ('1071: invalid credential', 'invalid credential'),
        1072: ('1072: Finance request date cannot be greater than todays date.', 'Finance request date cannot be greater than todays date.'),
        1073: ('1073: Disburse date can not be greater than todays date', 'Disburse date can not be greater than todays date'),
        1074: ('1074: Repayment date can not be greater than todays date', 'Repayment date can not be greater than todays date'),
        1075: ('1075: Hub already exists', 'Hub name should be unique'),
        1076: ('1076: Disburse amount can not be greater than finance amount', 'Disburse amount can not be greater than finance amount'),
        1077: ('1077: Disburse date can not be less than finance date', 'Disburse date  can not be less than finance date'),
        1078: ('1078: Repayment date can not be less than finance date', 'Repayment date can not be less than finance date'),
        1079: ('1079: Due date can not be less than repayment date', 'Due date can not be less than repayment date'),
        1080: ('1080: Due date can not be less than finance date', 'Due date can not be less than finance date'),
        1081: ('1081: Hub id can not be blank', 'Hub id can not be blank'),
        1082: ('1082: Channel can not be blank', 'Channel can not be blank'),
        1083: ('1083: idpId can not be blank', 'idpId can not be blank'),
        1084: ('1084: idp hub id and request hub id is different', 'idp hub id and request hub id is different'),
        1085: ('1085: Hub id no can have only numeric value', 'Hub id no can have only numeric value'),
        1086: ('1086: Channel should not be greater than 16 character', 'Channel should not be greater than 16 character'),
        1087: ('1087: invalid no of invoices count', 'invalid no of invoices count'),
        1088: ('1088: Invalid no of buyer identifier', 'Invalid no of buyer identifier'),
        1089: ('1089: Invalid no of seller identifier', 'Invalid no of seller identifier'),
        1090: ('1090: Header mismatch', 'Header mismatch'),
        1091: ('1091: Channel can not accept special character', 'Channel can not accept special character'),
        1092: ('1092: Channel can be HUB or IDP or IBDIC', 'Channel can be HUB or IDP or IBDIC'),
        1093: ('1093: idpId should be unique', 'idpId should be unique'),
        1094: ('1094: financeRequestAmt can not be greater than invoiceAmt.', 'financeRequestAmt can not be greater than invoiceAmt'),
        1095: ('1095: Channel value should be either HUB or Direct or IBDIC', 'Channel value should be either HUB or Direct or IBDIC'),
        1096: ('1096: Invalid entity count', 'Invalid entity count'),
        1097: ('1097: Invalid entity identifier count', 'Invalid entity identifier count'),
        1098: ('1098: If Adjustment type is none, only 0 should be allowed in Adjustment amt', 'If Adjustment type is none, only 0 should be allowed in Adjustment amt'),
        1099: ('1099: Grouping id should be unique', 'Grouping id should be unique'),
        1100: ('1100: Finance request partially executed', 'Finance request partially executed'),
        1101: ('1101: Partial Successfully', 'Partial Successfully'),
        1102: ('1102: disbursedFlag is incorrect ', 'disbursedFlag is incorrect'),
        1103: ('1103: Repayment amount can not be greater than finance amount and disburse amount', 'Repayment amount can not be greater than finance amount and disburse amount'),
        1104: ('1104: repaymentFlag is incorrect ', 'repaymentFlag is incorrect'),
        1105: ('1105: Disburse amount can not be less than previous disburse amount', 'Disburse amount can not be less than previous disburse amount'),
        1106: ('1106: Repayment amount shall be greater than previous repayment amount', 'Repayment amount shall be greater than previous repayment amount'),
        1107: ('1075: SFTP user already exists', 'SFTP user already exists'),
        1108: ('1108: Success and Ledger funded', 'Success and Ledger funded'),
        1109: ('1109: Success and Ledger Already funded', 'Success and Ledger Already funded'),
        1110: ('1110: Success and Ledger Partial funded', 'Success and Ledger Partial funded'),
        1111: ('1111: Success and Ledger Not Found', 'Success and Ledger Not Found'),
        1112: ('1112: Disburse amount should be greater than zero', 'Disburse amount should be greater than zero'),
        1113: ('1113: Repayment amount should be greater than zero', 'Repayment amount should be greater than zero'),
        1114: ('1114: Success and ledger is funded by others', 'Success and ledger is funded by others'),
        1115: ('1115: Success and ledger already disbursed', 'Success and ledger already disbursed'),
        1116: ('1116: Success and Invalid ledger data', 'Success and ledger already disbursed'),
        1117: ('1117: Ledger Already partially disbursed', 'Ledger Already partially disbursed'),
        1118: ('1118: Success and Ledger Already partially disbursed', 'Success and Ledger Already partially disbursed'),
        1119: ('1119: Wrong groupingId or ledgerNo', 'Wrong groupingId or ledgerNo'),
        1120: ('1120: Success and Wrong groupingId or ledgerNo', 'Success and Wrong groupingId or ledgerNo'),
        1121: ('1121: SFTP user added successfully', 'SFTP user added successfully'),
        1122: ('1122: SFTP user updated successfully', 'SFTP user updated successfully'),
        1123: ('1123: SFTP user deleted successfully', 'SFTP user deleted successfully'),
        1124: ('1124: sftpUserBackendId can not be blank for SFTP user detail', 'sftpUserBackendId can not be blank for SFTP user detail'),
        1125: ('1125: Email address already present in another SFTP user', 'Email address already present in another SFTP user'),
        1126: ('1126: Entered sftpUserBackendId does not exists', 'Entered sftpUserBackendId does not exists'),
        1127: ('1127: sftpUserBackendId should be blank while create sftp user', 'sftpUserBackendId should be blank while create sftp user'),
        1128: ('1128: Disbursement request partially executed', 'Disbursement request partially executed'),
        1129: ('1129: Repayment request partially executed', 'Repayment request partially executed'),
        1130: ('1130: GSP user already exists', 'Gsp gstin should be unique'),
        1131: ('1131: Invalid csv file', 'Invalid csv file'),
        1132: ('1132: Invalid report type', 'Invalid report type'),
        1133: ('1132: Record already exist', 'Record already exist'),
        1134: ('1134: Entered gspUserId does not exists', 'Entered gspUserId does not exists'),
        1135: ('1135: gspUserId can not be blank for GSP user delete', 'gspUserId can not be blank for GSP user delete'),
        1136: ('1136: GSP user update successfully !', 'GSP user update successfully !'),
        1137: ('1137: GSP user not found', 'GSP user not found'),
        1138: ('1138: gspUserId can not be blank for GSP user', 'gspUserId can not be blank for GSP user'),
        1139: ('1139: Error due to invoice pattern mismatch', 'Error due to invoice pattern mismatch'),
        1140: ('1140: Invoice Number date incorrect form', 'Invoice Number date incorrect form'),
        1141: ('1141: Invoice number duplicate found', 'Invoice number duplicate found'),
        1142: ('1142: Similar invoice found with amount mismatch', 'Similar invoice found with amount mismatch'),
        1143: ('1143: OTP is incorrect', 'OTP is incorrect'),
        1144: ('1144: OTP Expired.', 'Error <<4019>> pops up when user submits OTP whose cache TTL is over.'),
        1145: ('1145: Corporate User already exists', 'Corporate User already exists'),
        1146: ('1146: Incorrect gst or pan', 'Incorrect gst or pan'),
        1147: ('1147: Duplicate corporate name found.', 'Duplicate corporate name found.'),
        1148: ('1148: Duplicate Mobile Number found.', 'Duplicate mobile number found.'),
        1149: ('1149: Duplicate gstin number found.', 'Duplicate  gstin number found.'),
        1150: ('1150: Invalid IDP id.', 'Invalid IDP id.'),
        1151: ('1151: Data validation error.', 'Data validation error.'),
        1152: ('1152: Entity can not have multiple pan', 'Entity can not have multiple pan'),
        1153: ('1053: Entity can not have multiple CIN', 'Entity can not have multiple CIN'),
        1154: ('1054: Entity can not have multiple LEI', 'Entity can not have multiple LEI'),
    }
